"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tap_1 = require("tap");
var lib_1 = require("../../lib");
tap_1.test('check build args with array', function (t) {
    t.plan(1);
    var result = lib_1.exportsForTests.buildArgs(null, null, [
        '--build-file',
        'build.gradle',
        '--configuration',
        'compile',
    ]);
    t.deepEqual(result, [
        'snykResolvedDepsJson',
        '-q',
        '--no-daemon',
        '-Dorg.gradle.parallel=false',
        '--build-file',
        'build.gradle',
        '--configuration',
        'compile',
    ]);
    t.end();
});
tap_1.test('check build args with string', function (t) {
    t.plan(1);
    var result = lib_1.exportsForTests.buildArgs(null, null, ['--build-file build.gradle --configuration compile']);
    t.deepEqual(result, [
        'snykResolvedDepsJson',
        '-q',
        '--no-daemon',
        '-Dorg.gradle.parallel=false',
        '--build-file build.gradle --configuration compile',
    ]);
    t.end();
});
tap_1.test('extractJsonFromScriptOutput', function (t) {
    t.plan(1);
    var result = lib_1.exportsForTests.extractJsonFromScriptOutput("Mr Gradle says hello\nla dee da, la dee da\nJSONDEPS {\"hello\": \"world\"}\nsome other noise");
    t.deepEqual(result, { hello: 'world' });
    t.end();
});
tap_1.test('extractJsonFromScriptOutput throws on multiple JSONDEPS', function (t) {
    t.plan(1);
    t.throws(function () {
        lib_1.exportsForTests.extractJsonFromScriptOutput('JSONDEPS {"hello": "world"}\nJSONDEPS ["one more thing"]');
    });
});
//# sourceMappingURL=gradle-plugin.test.js.map